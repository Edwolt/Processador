set r0 main
j r0

hello:
1 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 0 0 1 0 0 0 0 1 1 1 0 0 1
1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1
1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 0 1 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1
1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 0
1 0 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 0 0 1

;for i in 0..hello.height
;   for j in 0..hello.width
;       if *hello
;           screen_pos = (j + x_offset) + (i + y_offset) * hello.width
;           outpx screen_pos color
;       hello++


main:
    ; r0: i
    ; r1: j
    ; r2: color
    ; r3: hello
    ; r4: hello.width (55)
    ; r5: hello.height (5)
    ; r6: for_i
    ; r7: for_j
    ; r8: screen_pos
    ; r9: if_0

    set r2 #F0F0
    set r3 hello
    set r4 55
    set r5 5
    set r6 for_i
    set r7 for_j
    set r8 screen_pos
    set r9 if_0

    set r0 0
    for_i:
        set r1 0
        for_j:
            ; if *hello == 0: goto if_0
            load ra r3
            cmp ra aux
            jz r9

            if_1:
                j r8
                outpx rd r2

            if_0:

            addi r3 1 ; hello++
            addi r1 1 ; j++
            cmp r1 r4 ; j != hello.width
            jne r7
        end_j:

        addi r0 1 ; i++
        cmp r0 r5 ; j != hello.width
        jne r6
    end_i:

    halt


screen_pos: ; (r0: i, r1: j) -> rd
    ; 12: x_offser
    ; 20: y_offset

    push aux
    push r2
    push r3
    push r4

    set r4 80

    ; j + x_offset
    move r3 r1
    addi r3 12

    ; (i + y_offset) * screen.width
    move r2 r0
    addi r2 20
    mul r2 r2 r4 

    add rd r2 r3

    pop r4
    pop r3
    pop r2
    pop aux
    j aux